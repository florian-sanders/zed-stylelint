name: Release

on:
  pull_request:
    types: [closed]
    branches: [main]

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_release_pr:
    runs-on: ubuntu-latest
    outputs:
      is_release_pr: ${{ steps.check.outputs.is_release_pr }}
      merge_commit_sha: ${{ steps.check.outputs.merge_commit_sha }}
    steps:
      - name: Check if this is a merged release PR
        id: check
        run: |
          if [[ "${{ github.event.pull_request.merged }}" == "true" && "${{ github.event.pull_request.head.ref }}" == "prepare-next-release" ]]; then
            echo "is_release_pr=true" >> $GITHUB_OUTPUT
            echo "merge_commit_sha=${{ github.event.pull_request.merge_commit_sha }}" >> $GITHUB_OUTPUT
          else
            echo "is_release_pr=false" >> $GITHUB_OUTPUT
            echo "merge_commit_sha=" >> $GITHUB_OUTPUT
          fi

  do_release:
    needs: [check_release_pr]
    if: |
      (github.event_name == 'pull_request' && needs.check_release_pr.outputs.is_release_pr == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout merge commit (PR merged)
        if: github.event_name == 'pull_request'
        run: |
          git fetch origin main
          git checkout ${{ needs.check_release_pr.outputs.merge_commit_sha }}

      - name: Get PR labels
        id: get_pr_labels
        env:
          GH_TOKEN: ${{ secrets.ZED_STYLELINT_RELEASE_WORKFLOW_SECRET }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          echo "PR_NUMBER: $PR_NUMBER"
          LABELS=$(gh pr view "$PR_NUMBER" --json labels -q '.labels.[].name')
          echo "LABELS=$LABELS" >> $GITHUB_OUTPUT
          echo "Labels: $LABELS"

      - name: Extract version
        id: extract
        run: |
          VERSION=""
          for label in ${{ steps.get_pr_labels.outputs.LABELS }}; do
            if [[ "$label" =~ ^version:([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
              VERSION="${BASH_REMATCH[1]}"
              break
            fi
          done
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Get new version and changelog (PR merged)
        if: github.event_name == 'pull_request'
        id: cliff_pr
        uses: orhun/git-cliff-action@v4
        with:
          args: --unreleased --bump ${{ steps.extract.outputs.version != '' && format('--tag {0}', steps.extract.outputs.version) || '' }}
        env:
          OUTPUT: tmp-changelog.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Bump cargo & extension version
        run: |
          sed -i 's/^version = "[0-9]\+\.[0-9]\+\.[0-9]\+"/version = "${{ steps.cliff_pr.outputs.version }}"/' Cargo.toml
          sed -i 's/^version = "[0-9]\+\.[0-9]\+\.[0-9]\+"/version = "${{ steps.cliff_pr.outputs.version }}"/' extension.toml

      - name: Create or update GitHub Release (and tag)
        env:
          GH_TOKEN: ${{ secrets.ZED_STYLELINT_RELEASE_WORKFLOW_SECRET }}
        run: |
          # Try to create the release, or update if it already exists
          gh release create "${{ steps.cliff_pr.outputs.version }}" \
            --title "${{ steps.cliff_pr.outputs.version }}" \
            --notes-file "tmp-changelog.md" \
            --latest --target "$GITHUB_SHA" \
