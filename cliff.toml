# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration
#
[remote.github]
owner = "florian-sanders"
repo = "zed-stylelint"

[changelog]
header = "# Changelog"
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% macro print_commit(commit) -%}
{%- set keywords = ["fixes", "fix", "closes", "close", "resolves", "resolve"] -%}
    - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
        {% if commit.breaking %}[**breaking**] {% endif %}\
        {{ commit.message | upper_first }} \
        ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }})) \
        {% for footer in commit.footers -%}
          {% if footer.token | lower in keywords -%}
            (Fixes [#{{ footer.value }}]({{ self::remote_url() }}/issues/{{ footer.value }}))
          {% endif -%}
        {% endfor -%}
{% endmacro -%}

{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]\
          ({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}

    {%- endfor %}
{% endfor -%}
"""
footer = ""
trim = true
render_always = true

[git]
conventional_commits = true
filter_unconventional = true
split_commits = false
protect_breaking_commits = false
commit_parsers = [
  { message = '\[skip changelog\]', skip = true },
  { message = "^feat", group = "✨ Features" },
  { message = "^fix", group = "🐛 Bug Fixes" },
  { message = "^chore", group = "🔧 Chores", skip = true },
  { message = "^docs?", group = "📚 Documentation" },
  { message = "^refactor", group = "♻️ Refactoring", skip = true },
  { message = "^perf", group = "⚡️ Performance" },
  { message = "^test", group = "✅ Tests" },
  { message = "^ci", group = "🤖 CI" },
  { message = "^build", group = "🛠 Build System" },
  { message = ".*", group = "Other" },
]
filter_commits = false
use_branch_tags = false
topo_order = false
topo_order_commits = true
sort_commits = "oldest"
recurse_submodules = false
